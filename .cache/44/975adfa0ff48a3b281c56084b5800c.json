{"id":"index.html","dependencies":[{"name":"./style.css","dynamic":true,"resolved":"C:\\Users\\Administrator\\Desktop\\TodoMVC\\style.css","parent":"C:\\Users\\Administrator\\Desktop\\TodoMVC\\index.html"},{"name":"C:\\Users\\Administrator\\Desktop\\TodoMVC\\package.json","includedInParent":true,"mtime":1538967014352}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n  <link href=\"/da232d78aa810382f2dcdceae308ff8e.css\" rel=\"stylesheet\" type=\"text/css\">\r\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/element-ui/lib/theme-chalk/index.css\">\r\n  <title>Document</title>\r\n</head>\r\n<body>\r\n  <script src=\"https://unpkg.com/vue/dist/vue.js\"></script>\r\n  <script src=\"https://unpkg.com/element-ui/lib/index.js\"></script>\r\n  <section class=\"todoapp\">\r\n    <header class=\"header\">\r\n      <h1>计划管理</h1>\r\n      <div class=\"new-todo-wrapper\">\r\n        <input v-show=\"todos.length\" :class=\"allDone ? 'el-icon-close' : 'el-icon-check'\" class=\"toggle-all\" type=\"checkbox\" v-model=\"allDone\">\r\n        <input class=\"new-todo\" autofocus=\"\" autocomplete=\"off\" placeholder=\"你准备做什么?\" v-model=\"newTodo\" @keyup.enter=\"addTodo\">\r\n          <!-- TODO: toggle-all只在有todo时显示 -->\r\n      </div>\r\n    </header>\r\n    <section class=\"main\" v-show=\"todos.length\">\r\n      <ul class=\"todo-list\">\r\n        <li v-for=\"todo in filteredTodos\" class=\"todo\" :key=\"todo.id\" :class=\"{ completed: todo.completed, editing: todo == editedTodo }\">\r\n          <div class=\"view\">\r\n            <el-checkbox v-model=\"todo.completed\"></el-checkbox>\r\n            <label class=\"todo-title\" @dblclick=\"editTodo(todo)\" v-cloak=\"\">{{ todo.title }}</label>\r\n            <el-button type=\"text\" icon=\"el-icon-close\" @click=\"removeTodo(todo)\"></el-button>\r\n          </div>\r\n          <!--TODO: v-todo-focus自定义指令？？ -->\r\n          <input type=\"text\" class=\"edit\" v-model=\"todo.title\" v-todo-focus=\"todo == editedTodo\" @blur=\"doneEdit(todo)\" @keyup.enter=\"doneEdit(todo)\" @keyup.esc=\"cancelEdit(todo)\">\r\n        </li>\r\n      </ul>\r\n    </section>\r\n    <footer class=\"footer\" v-show=\"todos.length\">\r\n      <span class=\"todo-count\" v-cloak=\"\">\r\n        还剩\r\n        <strong>{{ remaining }}</strong>\r\n        条\r\n      </span>\r\n      <ul class=\"filters\">\r\n        <li><a href=\"#/all\" :class=\"{ selected: visibility == 'all'}\">全部列表</a></li>\r\n        <li><a href=\"#/active\" :class=\"{ selected: visibility == 'active'}\">未完成</a></li>\r\n        <li><a href=\"#/completed\" :class=\"{ selected: visibility == 'completed'}\">已完成</a></li>\r\n      </ul>\r\n      <div class=\"button-wrapper\">\r\n        <button class=\"clear-completed\" @click=\"removeCompleted()\" v-show=\"todos.length\r\n        > remaining\">\r\n          清除已完成\r\n        </button>\r\n      </div>\r\n    </footer>\r\n  </section>\r\n  <footer class=\"infor\">\r\n      <p>双击计划列进行编辑</p>\r\n      <p>作者 <a href=\"https://github.com/xxq0411\">Da</a></p> \r\n  <script>var STORAGE_KEY = 'todos-vuejs-2.o';\nvar todoStorage = {\n  // 从sessionstorage获取todos,并给每个todo加上id属性\n  fetch: function fetch() {\n    var todos = JSON.parse(sessionStorage.getItem(STORAGE_KEY) || '[]');\n    todos.forEach(function (todo, index) {\n      todo.id = index;\n    });\n    sessionStorage.uid = todos.length;\n    return todos;\n  },\n  save: function save(todos) {\n    sessionStorage.setItem(STORAGE_KEY, JSON.stringify(todos));\n  }\n};\nvar filters = {\n  all: function all(todos) {\n    return todos;\n  },\n  active: function active(todos) {\n    return todos.filter(function (todo) {\n      return !todo.completed;\n    });\n  },\n  completed: function completed(todos) {\n    return todos.filter(function (todo) {\n      return todo.completed;\n    });\n  }\n};\nvar app = new Vue({\n  data: {\n    todos: todoStorage.fetch(),\n    newTodo: '',\n    editedTodo: null,\n    visibility: 'all'\n  },\n  watch: {\n    todos: {\n      handler: function handler(todos) {\n        todoStorage.save(todos);\n      },\n      deep: true\n    }\n  },\n  computed: {\n    // 根据visibility返回过滤后的todo\n    filteredTodos: function filteredTodos() {\n      return filters[this.visibility](this.todos);\n    },\n    // 共有几个未做完的todo\n    remaining: function remaining() {\n      return filters.active(this.todos).length;\n    },\n    allDone: {\n      get: function get() {\n        return this.remaining === 0;\n      },\n      // 使得todo的completed属性与单选按钮的值绑定\n      set: function set(value) {\n        this.todos.forEach(function (todo) {\n          todo.completed = value;\n        });\n      }\n    }\n  },\n  methods: {\n    addTodo: function addTodo() {\n      // a 为true 则返回 b，a 为false则返回 a\n      var value = this.newTodo && this.newTodo.trim();\n\n      if (!value) {\n        return;\n      }\n\n      this.todos.push({\n        id: todoStorage.uid++,\n        title: value,\n        completed: false\n      });\n      this.newTodo = '';\n    },\n    // TODO:进入编辑状态,不懂！\n    editTodo: function editTodo(todo) {\n      this.beforeEditCache = todo.title;\n      this.editedTodo = todo;\n    },\n    // 删除当前todo\n    removeTodo: function removeTodo(todo) {\n      this.todos.splice(this.todos.indexOf(todo), 1);\n    },\n    // 完成编辑\n    doneEdit: function doneEdit(todo) {\n      if (!this.editedTodo) {\n        return;\n      }\n\n      this.editedTodo = null;\n      todo.title = todo.title.trim();\n\n      if (!todo.title) {\n        this.removeTodo(todo);\n      }\n    },\n    removeCompleted: function removeCompleted() {\n      this.todos = filters.active(this.todos);\n    },\n    //  取消编辑\n    cancelEdit: function cancelEdit(todo) {\n      this.editedTodo = null;\n      todo.title = this.beforeEditCache;\n    }\n  },\n  directives: {\n    // 根据todo是否等于editTodo来判定该表单是否聚焦\n    'todo-focus': function todoFocus(el, binding) {\n      if (binding.value) {\n        el.focus();\n      }\n    }\n  }\n});\n\nfunction onHashChange() {\n  var visibility = window.location.hash.replace(/#\\/?/, '');\n\n  if (filters[visibility]) {\n    app.visibility = visibility;\n  } else {\n    window.location.hash = '';\n    app.visibility = 'all';\n  }\n}\n\nwindow.addEventListener('hashchange', onHashChange); // TODO: 为何直接调用？\n\nonHashChange();\napp.$mount('.todoapp');</script>\r\n </footer></body>\r\n</html>"},"hash":"86594a5881ee43b94c1348467751b97f","cacheData":{"env":{}}}